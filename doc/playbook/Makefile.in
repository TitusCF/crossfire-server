# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
BASENAME = @BASENAME@
BUNZIP = @BUNZIP@
BZIP = @BZIP@
CC = @CC@
COMPRESS = @COMPRESS@
CPP = @CPP@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
GUNZIP = @GUNZIP@
GZIP = @GZIP@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
PERL = @PERL@
PLUGIN_PYTHON = @PLUGIN_PYTHON@
PYTHON_LIB = @PYTHON_LIB@
PY_INCLUDES = @PY_INCLUDES@
PY_LIBS = @PY_LIBS@
RANLIB = @RANLIB@
STRIP = @STRIP@
TAR = @TAR@
UNCOMPRESS = @UNCOMPRESS@
VERSION = @VERSION@
X11LIBS = @X11LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
no_x = @no_x@
pkgconfdir = @pkgconfdir@
pkgstatedir = @pkgstatedir@
x_includes = @x_includes@
x_libraries = @x_libraries@

TEX = handbook.tex title.tex chap1.tex chap2.tex chap3.tex chap4.tex\
	chap5.tex chap6.tex chap7.tex appA.tex appB.tex appC.tex


dist_noinst_SCRIPTS = make_index.pl 

EXTRA_DIST = Makefile.in bonus-extract char-extract items-extract generic-extract\
 	gods-extract levels-extract local.sty skills-extract skills2-extract\
	spellpath-extract statskmod-extract treas1-extract treas2-extract \
	$(TEX) handbook.idx sorter empty.pbm fig/screen_dia.ps 


TABLES = bonus.tex char.tex equip.tex index.tex gods.tex levels.tex skills.tex\
	skill_stat.tex statskmod.tex spellpath.tex version.tex


ICONS = altar.tex arm_mail.tex br_wall.tex books.tex bows.tex cauldron.tex \
	corpse.tex dir_spin.tex flesh.tex food.tex foodone.tex fr_wall.tex \
	gatedoor.tex gems.tex gravestone.tex guild.tex holysymbol.tex \
	handbutt.tex horns.tex id_altar.tex keys.tex lockpicks.tex\
	lighter.tex money.tex pit.tex potion.tex potions.tex rings.tex \
	rods.tex runeblast.tex runedeath.tex runefire.tex runefrost.tex\
	runeshock.tex runemark.tex runegen.tex savebed.tex scrolls.tex \
	shops.tex shopmat.tex sign.tex talisman.tex wands.tex


CLEANFILES = $(TABLES) $(ICONS) items .bmaps in_* *.ps *x*.ppm tmp.ppm work.ppm \
	     handbook.toc handbook.lot handbook.dvi handbook.log handbook.aux handbook.idx


CROSSBIN = ../../server/crossfire
subdir = doc/playbook
mkinstalldirs = $(SHELL) $(top_srcdir)/utils/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/autoconf.h
CONFIG_CLEAN_FILES =
SCRIPTS = $(dist_noinst_SCRIPTS)

DIST_SOURCES =
DIST_COMMON = $(dist_noinst_SCRIPTS) Makefile.am Makefile.in
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  doc/playbook/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
tags: TAGS
TAGS:

DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/fig
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(SCRIPTS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-generic distclean-libtool

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

uninstall-am: uninstall-info-am

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	distclean distclean-generic distclean-libtool distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic \
	mostlyclean-libtool uninstall uninstall-am uninstall-info-am


handbook: ../handbook.ps

../handbook.ps: handbook.dvi
	dvips -o ../handbook.ps handbook.dvi

handbook.dvi: handbook.aux
	latex handbook.tex

handbook.aux: handbook.tex $(TABLES) $(ICONS)
	$(RM) handbook.aux
	latex handbook.tex

dump_switches: $(CROSSBIN)
	@$(RM) dump_switches
	@$(CROSSBIN) -m >/dev/null 2>&1 && touch dump_switches ||	(echo "You need to define DUMP_SWITCHES in include/config.h and";	echo "recompile before you can create the handbook.")
	@$(MAKE) $(MFLAGS) check_ok

$(CROSSBIN):
	( cd $(top_srcdir)/server ; make crossfire)

check_ok: dump_switches
	@$(RM) dump_switches

.bmaps: $(top_srcdir)/lib/archetypes
	$(RM) *.ps
	touch .bmaps

index.tex handbook.idx: make_index.pl
	touch handbook.idx
	$(PERL) make_index.pl handbook.idx > index.tex;

items: .bmaps in_items ../scripts/makeps.pl items.ps
	$(PERL) ../scripts/makeps.pl output=tex libdir=$(top_srcdir)/lib archdir=$(top_srcdir)/lib/ size=0.4  input=in_items inarch=$(pkgdatadir)/archetypes > items

in_items: items-extract $(pkgdatadir)/archetypes
	$(AWK) -f items-extract $(pkgdatadir)/archetypes > in_items

bonus.tex:
	$(AWK) -v living_c=$(top_srcdir)/common/living.c 	-f bonus-extract > bonus.tex

char.tex: .bmaps in_char ../scripts/makeps.pl characters.ps
	$(PERL) ../scripts/makeps.pl output=tex libdir=$(top_srcdir)/lib archdir=$(top_srcdir)/lib/ size=0.4 input=in_char inarch=$(pkgdatadir)/archetypes > char.tex

in_char: char-extract $(pkgdatadir)/archetypes $(top_srcdir)/common/living.c
	$(AWK) -v living_c=$(top_srcdir)/common/living.c 		-f char-extract $(pkgdatadir)/archetypes > in_char

equip.tex: in_equip treas2-extract
	$(AWK) -v eqitems=in_equip -f treas2-extract $(top_srcdir)/lib/treasures.bld > equip.tex

in_equip: treas1-extract $(pkgdatadir)/archetypes $(top_srcdir)/common/living.c
	$(AWK) -v living_c=$(top_srcdir)/common/living.c 		-f treas1-extract $(pkgdatadir)/archetypes | sort -d > in_equip

gods.tex: gods-extract $(CROSSBIN)
	$(AWK) -F, -v crosscmd="$(CROSSBIN) -m8" -f gods-extract > gods.tex

levels.tex:
	$(AWK) -v living_c=../../common/living.c 	-f levels-extract > levels.tex

skills.tex: in_equip skills-extract
	$(AWK) -v eqitems=in_equip -f skills-extract $(top_srcdir)/lib/treasures.bld > skills.tex

skill_stat.tex: skills2-extract $(CROSSBIN)
		$(AWK) -F, -v crosscmd="$(CROSSBIN) -m5" 			-f skills2-extract | sort > skill_stat.tex

statskmod.tex:
	$(AWK) -v living_c=../../server/skill_util.c 	-f statskmod-extract > statskmod.tex

spellpath.tex:
	$(AWK) -v living_c=../../include/spellist.h 	-f spellpath-extract |sort > spellpath.tex

version.tex: $(CROSSBIN)
	$(CROSSBIN) -v 2>&1 | grep "^This is" | cut -d" " -f4- > version.tex

sp_item.tex: handbutt.tex gatedoor.tex pit.tex br_wall.tex fr_wall.tex dir_spin.tex

characters.ps items.ps:
	touch $@

cauldron.tex: items sorter
	egrep -e "^122 " items | grep "cauldron" | $(AWK) -F'&' 	-f generic-extract | sort > cauldron.tex

guild.tex: items sorter
	egrep -e "^66 " items | grep "guild" | $(AWK) -F'&' 	-f generic-extract | sort > guild.tex

holysymbol.tex: items sorter
	egrep -e "^43 " items | grep "holy" | $(AWK) -F'&' 	-f generic-extract | sort > holysymbol.tex

lockpicks.tex: items sorter
	egrep -e "^43 " items | grep "lockpicks" | $(AWK) -F'&' 	-f generic-extract | sort > lockpicks.tex

potion.tex: items sorter
	egrep -e "^5 " items | grep "potiongen" | $(AWK) -F'&' 	-f generic-extract | sort > potion.tex

runeblast.tex: items sorter
	egrep -e "^154 " items | grep "rune-blast" | 	$(AWK) -F'&' -f generic-extract | sort > runeblast.tex

runedeath.tex: items sorter
	egrep -e "^154 " items | grep "rune-death" | 	$(AWK) -F'&' -f generic-extract | sort > runedeath.tex

runegen.tex: items sorter
	egrep -e "^154 " items | grep "generic-rune" | 	$(AWK) -F'&' -f generic-extract | sort > runegen.tex

runefrost.tex: items sorter
	egrep -e "^154 " items | grep "rune-frost." | 	$(AWK) -F'&' -f generic-extract | sort > runefrost.tex

runefire.tex: items sorter
	egrep -e "^154 " items | grep "rune-fire." | 	$(AWK) -F'&' -f generic-extract | sort > runefire.tex

runemark.tex: items sorter
	egrep -e "^98 " items | grep "rune-mark." | 	$(AWK) -F'&' -f generic-extract | sort > runemark.tex

runeshock.tex: items sorter
	egrep -e "^154 " items | grep "rune-shock." | 	$(AWK) -F'&' -f generic-extract | sort > runeshock.tex

shops.tex: items sorter
	egrep -e "^66 " items | grep "store" | $(AWK) -F'&' 	-f generic-extract | sort > shops.tex

talisman.tex: items sorter
	egrep -e "^43 " items | grep "talisman" | $(AWK) -F'&' 	-f generic-extract | sort > talisman.tex

altar.tex: items sorter
	egrep -e "^18 " items | $(AWK) -F'&' -f generic-extract | sort > altar.tex

arm_mail.tex: items generic-extract
	egrep -e "^16 " items | $(AWK) -F'&' -f generic-extract | 	sort -t'&' -n +4 -5 > arm_mail.tex

br_wall.tex: items sorter
	egrep -e "^45 " items | $(AWK) -F'&' -f generic-extract | sort > br_wall.tex

books.tex: items sorter
	egrep -e "^8 " items | $(AWK) -F'&' -f generic-extract | sort > books.tex

bows.tex: items generic-extract
	egrep -e "^14 " items | $(AWK) -F'&' -f generic-extract | sort > bows.tex

corpse.tex: items sorter
	egrep -e "^157 " items | $(AWK) -F'&' -f generic-extract | sort > corpse.tex

dir_spin.tex: items sorter
	egrep -e "^90 " items | $(AWK) -F'&' -f generic-extract | sort > dir_spin.tex
	egrep -e "^112 " items | $(AWK) -F'&' -f generic-extract | sort >> dir_spin.tex

flesh.tex: items sorter
	egrep -e "^72 " items | $(AWK) -F'&' -f generic-extract | sort > flesh.tex

food.tex: items sorter
	egrep -e "^6 " items | $(AWK) -F'&' -f generic-extract | sort > food.tex

foodone.tex: items sorter
	egrep -e "^6 " items | $(AWK) -F'&' -f generic-extract | grep "food" > foodone.tex

fr_wall.tex: items sorter
	egrep -e "^62 " items | $(AWK) -F'&' -f generic-extract | sort > fr_wall.tex

gatedoor.tex: items sorter
	egrep -e "^20 " items | $(AWK) -F'&' -f generic-extract | sort > gatedoor.tex
	egrep -e "^23 " items | $(AWK) -F'&' -f generic-extract | sort >> gatedoor.tex
	egrep -e "^91 " items | $(AWK) -F'&' -f generic-extract | sort >> gatedoor.tex

gems.tex: items sorter
	egrep -e "^60 " items | $(AWK) -F'&' -f generic-extract | sort > gems.tex

gravestone.tex: items sorter
	egrep -e "^38 " items | $(AWK) -F'&' -f generic-extract | sort > gravestone.tex

handbutt.tex: items sorter
	egrep -e "^92 " items | $(AWK) -F'&' -f generic-extract | sort > handbutt.tex
	egrep -e "^93 " items | $(AWK) -F'&' -f generic-extract | sort >> handbutt.tex

horns.tex: items sorter
	egrep -e "^35 " items | $(AWK) -F'&' -f generic-extract | sort > horns.tex

id_altar.tex: items sorter
	egrep -e "^139 " items | $(AWK) -F'&' -f generic-extract | sort > id_altar.tex

keys.tex: items sorter
	egrep -e "^21 " items | $(AWK) -F'&' -f generic-extract | sort > keys.tex
	egrep -e "^24 " items | $(AWK) -F'&' -f generic-extract | sort >> keys.tex

lighter.tex: items sorter
	egrep -e "^75 " items | $(AWK) -F'&' -f generic-extract | sort > lighter.tex

money.tex: items sorter
	egrep -e "^36 " items | $(AWK) -F'&' -f generic-extract | sort > money.tex

pit.tex: items sorter
	egrep -e "^95 " items | $(AWK) -F'&' -f generic-extract | sort > pit.tex

potions.tex: items sorter
	egrep -e "^5 " items | $(AWK) -F'&' -f generic-extract | sort > potions.tex

rings.tex: items sorter
	egrep -e "^70 " items | $(AWK) -F'&' -f generic-extract | sort > rings.tex

rods.tex: items sorter
	egrep -e "^3 " items | $(AWK) -F'&' -f generic-extract | sort > rods.tex

savebed.tex: items sorter
	egrep -e "^106 " items | $(AWK) -F'&' -f generic-extract | sort > savebed.tex

scrolls.tex: items sorter
	egrep -e "^111 " items | $(AWK) -F'&' -f generic-extract | sort > scrolls.tex

shopmat.tex: items sorter
	egrep -e "^69 " items | $(AWK) -F'&' -f generic-extract | sort > shopmat.tex

sign.tex: items sorter
	egrep -e "^98 " items | $(AWK) -F'&' -f generic-extract | sort > sign.tex

wands.tex: items sorter
	egrep -e "^109 " items | $(AWK) -F'&' -f generic-extract | sort > wands.tex
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

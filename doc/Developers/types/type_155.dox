/**
@var TRAP
See @ref page_type_155
*/

/**
@page page_type_155 Trap


@section Description
    A trap is a object that can either do damage or trigger another connected object
	when detonated. Traps are like runes except they are not magical in nature,
	and generally have either a physical attack or trigger a reaction.
    <br><br>
    Traps hit any monster or person who steps on them for 'dam' damage in
    'attacktype' attacktype and/or trigger a reaction.
    <br><br>
    Many traps are already defined in the archetypes. 



Type defined by:
- @ref object::type = 155


@section Attributes

<table>
	<tr>
		<th>Attribute</th>
		<th>Field</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>attacktype</td>
		<td>@ref obj::attacktype</td>
		<td>    This attribute defines what attacktype to use for direct damage when
    the trap detonates.
		</td>
	</tr>
	<tr>
		<td>block view</td>
		<td>@ref FLAG_BLOCKSVIEW</td>
		<td>    If an item is set to block view, players (and monsters) cannot
    see beyond it unless they cross it or manage to stand on top.
		</td>
	</tr>
	<tr>
		<td>connection</td>
		<td>@ref page_connected "connection value"</td>
		<td>    When the trap is detonated, all objects with the same
    connection value get activated.
		</td>
	</tr>
	<tr>
		<td>detonation text</td>
		<td>@ref obj::msg</td>
		<td>    When the trap detonates, this text is displayed to the
    victim. For especially powerful or complex traps, create an appropriate
    and thrilling description. ;)
		</td>
	</tr>
	<tr>
		<td>direct damage</td>
		<td>@ref liv::dam</td>
		<td>    &lt;direct damage&gt; specifies how much damage is done by the trap.
	This should be set in reasonable relation to the trap's level.
		</td>
	</tr>
	<tr>
		<td>elevation</td>
		<td>@ref obj::elevation</td>
		<td>    The elevation (height above sea level) of this tile. It is used for weather
    calculations and should be in the range -32000..32000. The elevation of a
    tile must be set in the bottom-most game object; elevation values for
    non-bottom-most game objects are ignored by the Crossfire server.
		</td>
	</tr>
	<tr>
		<td>glow radius</td>
		<td>@ref obj::glow_radius</td>
		<td>    If &lt;glow radius&gt; is set to a value greater zero, the object
    appears lit up on dark maps. &lt;glow radius&gt; can be a value
    between 0 and 4, the higher, the more light does the object emit.
		</td>
	</tr>
	<tr>
		<td>identified</td>
		<td>@ref FLAG_IDENTIFIED</td>
		<td>    If an item is identified, the player has full knowledge about it.
		</td>
	</tr>
	<tr>
		<td>image</td>
		<td>@ref obj::face</td>
		<td>    The image-name defines what image is displayed for this object in-game.
		</td>
	</tr>
	<tr>
		<td>invisible</td>
		<td>@ref obj::invisible</td>
		<td>    Generally makes the object invisible. Depending on the object-type,
    some can be made visible by the show_invisible spell. If in doubt, test it.
    Putting an invisible object under the floor always prevents it from being
    shown.
		</td>
	</tr>
	<tr>
		<td>name</td>
		<td>@ref obj::name</td>
		<td>    This is the name of the object, displayed to the player.
		</td>
	</tr>
	<tr>
		<td>number</td>
		<td>@ref obj::nrof</td>
		<td>    This value determines the number of objects in one stack (for example:
    100 gold coins =&gt; "number = 100"). You should set this at least to one, for
    any pickable object - otherwise it won't be mergeable into a stack.
		</td>
	</tr>
	<tr>
		<td>number of charges</td>
		<td>@ref liv::hp</td>
		<td>    The trap will detonate &lt;number of charges&gt; times before disappearing.
		</td>
	</tr>
	<tr>
		<td>smooth level</td>
		<td>@ref obj::smoothlevel</td>
		<td>    If &lt;smooth level&gt; is set to a value greater zero, the object will be
    drawn partially over adjacent squares having a lower &lt;smooth level&gt;
    value. The value must be between 0 and 255 (inclusive); 0 means &quot;never
    overlap adjacent squares&quot;.
		</td>
	</tr>
	<tr>
		<td>trap level</td>
		<td>@ref obj::level</td>
		<td>    Level  effects how easily a trap may be found and disarmed, and
    how much experience the player gets for doing so. Beware: High level
    traps can be quite a cheap source of experience! So either make them
    tough, or keep the level low.
		</td>
	</tr>
	<tr>
		<td>visibility</td>
		<td>@ref liv::Cha</td>
		<td>    This value determines what fraction of the time the trap is visible:
    It'll be randomly visible 1/&lt;visibility&gt; of the time. Also effects
    how easily the trap may be found.
		</td>
	</tr>
</table>
*/


                        ** Media tags **

Foreword
========

This document is a quick explanation of tags that can be used in extended
messages. For informations on what extended messages are at protocol level,
please refer to the protocol file in doc/Developers/protocol

Quick example
=============
[b]And now, for your pleasure only, an example[/b]

[i]This is an old letter, full of dirt and partially destroyed
[hand]My dear friend,[/i]
as you know, two years ago, i had to leave quickly.
Words have come to me of powerful magic scrolls discovered in an old temple by
my uncle. I have moved to study them. I have, however, not forgot your knowledges
in ancient languages. I need your help for
[print][b]Some parts of document are to damaged to be readable[/b]
[arcane]Arghis [color=Red]k'h [color=dark slate blue]ark
[color=#004000]fido[/color]
[hand]please come as fast as possible my friend.
[print][b]The bottom of letter seems deliberatly shred.

What is it?
===========
Media tag are special mark up that are send with extended text. Situation in
which such case happend are, but not limited to, book reading, signs reading,
motd, news, rules. Media tags are made of delimiters, with inside them the name
of tag and optional parameters for the tag. Unlike html or bbcode, there is no
notion of opening and closing tag. A client not able to understand a tag is
supposed to ignore it. Also, when server discuss with old client not supporting
a specific extended text, it will issue a classical message output, with all
tags removed.
Don't be abused by the name of some tags. The fact there exist a pair [b] [/b]
does not mean there is an opening and a closing 'bold' tag. It simply mean there
is a 'bold' and a 'no bold' tag. You might think it's the same, but no. Imagine
the following text:
Hello [b] all [b]crossfire[/b] members [/b]
The word 'members' will not appear in bold, because there is no notion of
closing tags and so no notion of tag inside a tag (in bbcode, it would probably
appear in bold). This all was made to ensure all client can safetly ignore tags
they don't understand and make the parsing process straight forward.

How does it work?
=================
All tags start with character '[' and ends with character ']'. Between those is
the tag itself, made of the name and optionnaly the arguments. There is no rule
as how the arguments are to be handled. This all depend on the tag. The only
requirement is that the character ']' and '[' do not appear inside the tag (be
it in tag name, parameter name or parameters value). The end of line are
interpreted as is and multiple space are not removed. The only thing done is
intepretation of tags.

Format of a tag: [<tagname><arguments part>]

Existing tags
=============
[b]             activate the bold flag.
[/b]            deactivate the bold flag
[i]             activate the italic flag
[/i]            deactivate the italic flag
[fixed]         set the font to fixed width
[arcane]        set the font to a magical one
[hand]          set the font to hand writing
[strange]       set the font to 'strange unknown language'
[print]         set the font to the client default one
[color=<value>] activate color and set it to <value> (see color section bottom)
[/color]        deactivate color

Colors
======
Colors are handled the way XParseColor handle them. This process is quite
complex and it's suggested to user to restrict to one of the following 3 forms:
- use the color name (eg [color=Red], [color=Blue], [color=dark green])
- use the html like #RRGGBB (eg [color=#FF0000], [color=#0000FF],
[color=#004000])
- use the X11 rgb string rgb:rr/gg/bb (eg [color=rgb:ff/00/00],
[color=rgb:00/00/ff], [color=rgb:00/40/00])
The use of color names is highly recommanded. The list of color names are
referenced inside the X11 rgb file: /usr/lib/X11/rgb.txt

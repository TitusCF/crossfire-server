#!/bin/sh
# crossloop -- restart crossfire-server in case of a crash

# Full path to server binary.
CF_BIN="BINDIR/crossfire-server"

# Additional flags to pass to the server (comment out to disable).
CF_FLAGS="-d"

# Directory to use for storing temporary runtime files. It is created if it
# does not exist. It should be dedicated to Crossfire, because it is saved
# in the event of a server crash.
CF_TMP="/tmp/crossfire"

# Directory for storing server logs (default $CF_TMP).
CF_LOGDIR="${CF_TMP}"

# Maximum number of restarts (set to zero to loop infinitely, default 100).
MAX_RESTART=100

# Directory for saving crash data.
CRASH_DIR="`dirname ${CF_TMP}`"

# Send mail to server admins in case of a crash (comment out to disable).
#CRASH_MAIL="yourname@example.com"

#### END OF CONFIGURATION ####

# The current generation of the server.
generation=1

while [ ${MAX_RESTART} -ne ${generation} ]; do
    # Create folder to store temporary files if it doesn't exist.
    if [ ! -d ${CF_TMP} ]; then
        mkdir ${CF_TMP}
        chmod 700 ${CF_TMP}
    fi

    # Change to the ${CF_TMP} directory and start server.
    cd ${CF_TMP}
    echo "===>>> Starting server (generation ${generation})..."

    ${CF_BIN} ${CF_FLAGS} -tmpdir "${CF_TMP}" \
        -log "${CF_LOGDIR}/crossfire-`date +%Y-%m-%d-%H:%M`.log"

    # If the server crashed and CRASH_DIR is set, save CF_TMP.
    if [ ${?} -ne 0 -a -n "${CRASH_DIR}" ]; then
        echo "===>>> Server crashed; saving crash info and restarting..."
        crash_dump="${CRASH_DIR}/crossfire-`date +%Y-%m-%d-%H:%M`.crash"
        mv ${CF_TMP} ${crash_dump}

        if [ -n "${CRASH_MAIL}" ]; then
            core_files=`ls ${crash_dump}/*core*`
            mail -s "Crossfire crash on `hostname`" "${CRASH_MAIL}" << EOF
Crossfire has terminated unexpectedly. Information about this crash is saved
in '${crash_dump}' on `hostname`.

`uname -a`

The following core dumps were found:

${core_files}

The following backtrace was generated by GDB:

`gdb ${CF_BIN} ${core_files} -batch`

If this crash occurs frequently or can be reliably reproduced, please file a
bug report with the full contents of this crash report.
EOF
        fi
    else
        echo "===>>> Restarting server (press CTRL-C to quit)..."
    fi

    # Increment server generation.
    generation=`expr ${generation} + 1`

    # Wait for 10 seconds before restarting again.
    sleep 10
done
